{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { ndarray as gindexOf } from '@stdlib/blas-ext-base-gindex-of';\n\n\n// MAIN //\n\n/**\n* Returns the last index of a specified search element in a strided array using alternative indexing semantics.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {*} searchElement - search element\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {integer} index\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = glastIndexOf( x.length, 3.0, x, 1, 0 );\n* // returns 7\n*/\nfunction glastIndexOf( N, searchElement, x, strideX, offsetX ) {\n\tvar idx;\n\n\tif ( N <= 0 ) {\n\t\treturn -1;\n\t}\n\t// Reverse the iteration order by flipping the stride and adjusting the offset:\n\toffsetX += ( N-1 ) * strideX;\n\tstrideX *= -1;\n\n\t// Find the index of the search element in the reversed \"view\":\n\tidx = gindexOf( N, searchElement, x, strideX, offsetX );\n\tif ( idx < 0 ) {\n\t\treturn idx;\n\t}\n\t// Convert the index from reversed \"view\" to an index in the original \"view\":\n\tidx = N - 1 - idx;\n\treturn idx;\n}\n\n\n// EXPORTS //\n\nexport default glastIndexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Returns the last index of a specified search element in a strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {*} searchElement - search element\n* @param {Collection} x - input array\n* @param {integer} strideX - stride length\n* @returns {integer} index\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = glastIndexOf( x.length, 3.0, x, 1 );\n* // returns 7\n*/\nfunction glastIndexOf( N, searchElement, x, strideX ) {\n\treturn ndarray( N, searchElement, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default glastIndexOf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the last index of a specified search element in a strided array.\n*\n* @module @stdlib/blas-ext-base-glast-index-of\n*\n* @example\n* import glastIndexOf from '@stdlib/blas-ext-base-glast-index-of';\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = glastIndexOf( x.length, 3.0, x, 1 );\n* // returns 7\n*\n* @example\n* import glastIndexOf from '@stdlib/blas-ext-base-glast-index-of';\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, 3.0 ];\n*\n* var idx = glastIndexOf.ndarray( x.length, 3.0, x, 1, 0 );\n* // returns 7\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["glastIndexOf","N","searchElement","x","strideX","offsetX","idx","gindexOf","ndarray","stride2offset","setReadOnly","main"],"mappings":";;mUA2CA,SAASA,EAAcC,EAAGC,EAAeC,EAAGC,EAASC,GACpD,IAAIC,EAEJ,OAAKL,GAAK,GACD,GAGTI,IAAaJ,EAAE,GAAMG,GAIrBE,EAAMC,EAAUN,EAAGC,EAAeC,EAHlCC,IAAY,EAGkCC,IACnC,EACHC,EAGRA,EAAML,EAAI,EAAIK,EAEf,CClBA,SAASN,EAAcC,EAAGC,EAAeC,EAAGC,GAC3C,OAAOI,EAASP,EAAGC,EAAeC,EAAGC,EAASK,EAAeR,EAAGG,GACjE,CCMAM,EAAAC,EAAA,UAAAH"}